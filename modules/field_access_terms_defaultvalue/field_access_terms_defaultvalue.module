<?php

/**
 * Implements hook_modules_installed
 */
function field_access_terms_defaultvalue_modules_installed($modules) {
    if (in_array('field_access_terms_defaultvalue', $modules)) {
        $group_to_create= \Drupal::entityTypeManager()->getStorage('group')->create(['type' => 'collection_based']);
        $group_to_create->set('label', 'Public Collection');
        $group_to_create->setOwner(\Drupal\user\Entity\User::load(1));
        $group_to_create->save();

        $group_to_create= \Drupal::entityTypeManager()->getStorage('group')->create(['type' => 'collection_based']);
        $group_to_create->set('label', 'Private Collection');
        $group_to_create->setOwner(\Drupal\user\Entity\User::load(1));
        $group_to_create->save();

        $group_to_create= \Drupal::entityTypeManager()->getStorage('group')->create(['type' => 'role_based']);
        $group_to_create->set('label', 'Private');
        $group_to_create->setOwner(\Drupal\user\Entity\User::load(1));
        $group_to_create->save();

        $group_to_create= \Drupal::entityTypeManager()->getStorage('group')->create(['type' => 'collection_based']);
        $group_to_create->set('label', 'Public');
        $group_to_create->setOwner(\Drupal\user\Entity\User::load(1));
        $group_to_create->save();
    }
}

/**
 * Implements hook_entity_insert
 */
function field_access_terms_defaultvalue_entity_insert(\Drupal\Core\Entity\EntityInterface $entity){
    
    \Drupal::logger(basename(__FILE__, '.module'))->error("field_access_terms_defaultvalue_entity_insert");
    if ($entity->getEntityTypeId() === "taxonomy_term") {
        //  Assign private as default for field_access_term
        $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')
            ->loadByProperties(['name' => "Private", 'vid' => 'islandora_access']);
        $term = reset($term);
        $term_id = $term->id();

        $field_config_ids = \Drupal::entityQuery('field_config')
            ->accessCheck(FALSE)
            ->condition('field_type', 'entity_reference')
            ->condition('status', 1)
            ->execute();
        foreach ($field_config_ids as $field_id => $field_name) {
            if (strpos($field_id, 'field_access_terms') !== false) {
                $field_config = \Drupal\field\Entity\FieldConfig::load($field_id);
                $field_config->setDefaultValue($term_id);
                $field_config->save();
            }
        }
    }
}
